
//---------------------
#define MOD 1000000007
#define MAXN 200000
//---------------------
ll inv[MAXN];
ll fac[MAXN];
ll facinv[MAXN];


ll modpow(ll a, ll b){
  	if(b==-1) return inv[a];
  	if(b<-1) {
  		a=inv[a%MOD];
  		b*=-1;
  	}
	if(b==0) return 1;
	if(b==1) return a%MOD;
	ll ret=modpow(a%MOD,b>>1)%MOD;
	return (ret*ret%MOD)*((b%2)?(a%MOD):1)%MOD;
}

ll fermat(ll a){
  	if(a%MOD) return -1;
	return modpow(a,MOD-2);
}

inline ll modmult(ll a, ll b){
	return (a%MOD)*(b%MOD)%MOD;
}

inline ll modmult(ll a, ll b ,ll c){
	return (a%MOD)*(b%MOD)%MOD*(c%MOD)%MOD;
}


inline ll modfact(ll n){
	if(n==0 || n==1) return 1;
	if(n>=MOD) return 0;
	return fac[n];
}

inline ll modcomb(ll m, ll n){
  	if(m>=MOD || n>=MOD || n<0 || m<0) return -1;
  	if(n==0||n==m) return 1;
  	  	if(m<n) return 0;
	return fac[m]*facinv[m-n]%MOD*facinv[n]%MOD;
}
      
void makelist(){
  	inv[0]=-1;
  	inv[1]=1;
	for(ll i=2;i<MAXN;i++) inv[i]=(MOD-MOD/i)*inv[MOD%i]%MOD;
	fac[0]=1;
	REP1(i,MAXN) fac[i]=(fac[i-1]*i)%MOD;
	facinv[MAXN-1] = modpow(fac[MAXN-1],MOD-2);
	PER(i,MAXN-1) facinv[i]=(facinv[i+1]*(i+1))%MOD;
}


void makepowlist(ll *list,ll a,ll num){
	list[0]=1;
	REP1(i,num-1){
		list[i] = modmult(list[i-1],a);
	}
}


void makepowinvlist(ll *list, ll a,ll num){
	list[0]=1;
	REP1(i,num-1){
		list[i] = modmult(list[i-1],inv[a]);
	}
}

int main(){
  	makelist();
	
	return 0;
}